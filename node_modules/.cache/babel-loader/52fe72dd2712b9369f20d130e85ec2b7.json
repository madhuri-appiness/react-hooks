{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/components/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchInput({\n  loading,\n  options,\n  requests,\n  placeholder\n}) {\n  _s();\n\n  var _options$entries, _options$entries2;\n\n  const [inputValue, setInputValue] = useState('');\n\n  const updateValue = newValue => {\n    setInputValue(newValue);\n    requests(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: e => updateValue(e.target.value),\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }, this), (options === null || options === void 0 ? void 0 : (_options$entries = options.entries) === null || _options$entries === void 0 ? void 0 : _options$entries.length) > 0 && !loading && (options === null || options === void 0 ? void 0 : (_options$entries2 = options.entries) === null || _options$entries2 === void 0 ? void 0 : _options$entries2.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value.API\n      }, `${value.API}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchInput, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n\n_c = SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/components/searchBar.js"],"names":["React","useState","useCallback","SearchInput","loading","options","requests","placeholder","inputValue","setInputValue","updateValue","newValue","e","target","value","entries","length","map","index","API"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAChCC,EAAAA,OADgC;AAEhCC,EAAAA,OAFgC;AAGhCC,EAAAA,QAHgC;AAIhCC,EAAAA;AAJgC,CAArB,EAKZ;AAAA;;AAAA;;AACC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,aAAa,CAACE,QAAD,CAAb;AACAL,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AACI,MAAA,KAAK,EAAEH,UADX;AAEI,MAAA,QAAQ,EAAGI,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAGI,MAAA,WAAW,EAAEP;AAHjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOQ;AAAA,iBACKH,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,EAEK,CAAAC,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEU,OAAT,sEAAkBC,MAAlB,IAA2B,CAA3B,IACG,CAACZ,OADJ,KAEGC,OAFH,aAEGA,OAFH,4CAEGA,OAAO,CAAEU,OAFZ,sDAEG,kBAAkBE,GAAlB,CAAsB,CAACH,KAAD,EAAQI,KAAR,kBAClB;AAAA,kBAAmCJ,KAAK,CAACK;AAAzC,SAAU,GAAEL,KAAK,CAACK,GAAI,IAAGD,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,CAFH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAhCuBf,W;;KAAAA,W","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nexport default function SearchInput({\n    loading,\n    options,\n    requests,\n    placeholder,\n}) {\n    const [inputValue, setInputValue] = useState('');\n\n    const updateValue = (newValue) => {\n        setInputValue(newValue);\n        requests(newValue);\n    };\n\n    return (\n        <div>\n            <input\n                value={inputValue}\n                onChange={(e) => updateValue(e.target.value)}\n                placeholder={placeholder}\n            />\n          \n                <ul>\n                    {loading && <li>Loading...</li>}\n                    {options?.entries?.length > 0 &&\n                        !loading &&\n                        options?.entries?.map((value, index) => (\n                            <li key={`${value.API}-${index}`}>{value.API}</li>\n                        ))}\n                </ul>\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}