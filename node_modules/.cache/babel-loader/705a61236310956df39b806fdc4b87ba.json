{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\nimport store from \"./utils/store\";\nimport { updateUserInfo } from \"./redux/actions/global\";\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport history from \"./utils/history\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kc = Keycloak(`/keycloak.json`);\n\nconst render = () => {\n  ReactDOM.render(\n  /*#__PURE__*/\n  // Wrap Provider inside AppContainer\n  _jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this), document.getElementById('app'));\n};\n\nkc.init({\n  onLoad: \"check-sso\",\n  checkLoginIframe: false\n}).success(authenticated => {\n  if (authenticated) {\n    if (kc.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n      store.dispatch(updateUserInfo(kc.tokenParsed, kc));\n      render();\n    } else {\n      kc.logout();\n    }\n  } else {\n    kc.login();\n  }\n});\naxios.interceptors.request.use(config => {\n  config.headers = Object.assign({}, config.headers, {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    Authorization: 'Bearer ' + kc.token\n  });\n  return config;\n});\naxios.interceptors.response.use(response => {\n  // Do something with response data\n  return response;\n}, error => {\n  // Do something with response error\n  if (error.response.status === 401) {\n    kc.redirectUri = process.env.REACT_APP_REDIRECT_URI;\n    kc.logout();\n  }\n\n  return error;\n}); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Keycloak","axios","store","updateUserInfo","BrowserRouter","Router","Switch","history","Provider","kc","render","document","getElementById","init","onLoad","checkLoginIframe","success","authenticated","realmAccess","roles","indexOf","dispatch","tokenParsed","logout","login","interceptors","request","use","config","headers","Object","assign","Accept","Authorization","token","response","error","status","redirectUri","process","env","REACT_APP_REDIRECT_URI"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAGA,MAAMC,EAAE,GAAGT,QAAQ,CAAE,gBAAF,CAAnB;;AAEA,MAAMU,MAAM,GAAG,MAAM;AACjBb,EAAAA,QAAQ,CAACa,MAAT;AAAA;AACI;AACA,UAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,OAAjB;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ,EASII,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CATJ;AAWH,CAZD;;AAcAH,EAAE,CAACI,IAAH,CAAQ;AAAEC,EAAAA,MAAM,EAAE,WAAV;AAAuBC,EAAAA,gBAAgB,EAAE;AAAzC,CAAR,EAA0DC,OAA1D,CAAkEC,aAAa,IAAI;AAC/E,MAAIA,aAAJ,EAAmB;AACf,QAAIR,EAAE,CAACS,WAAH,CAAeC,KAAf,CAAqBC,OAArB,CAA6B,YAA7B,MAA+C,CAAC,CAApD,EAAuD;AACnDlB,MAAAA,KAAK,CAACmB,QAAN,CAAelB,cAAc,CAACM,EAAE,CAACa,WAAJ,EAAiBb,EAAjB,CAA7B;AACAC,MAAAA,MAAM;AACT,KAHD,MAGO;AACHD,MAAAA,EAAE,CAACc,MAAH;AACH;AACJ,GAPD,MAOO;AACHd,IAAAA,EAAE,CAACe,KAAH;AACH;AACJ,CAXD;AAaAvB,KAAK,CAACwB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrCA,EAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAM,CAACC,OAAzB,EAAkC;AAC/C,oBAAgB,kBAD+B;AAE/CG,IAAAA,MAAM,EAAE,kBAFuC;AAG/CC,IAAAA,aAAa,EAAE,YAAYxB,EAAE,CAACyB;AAHiB,GAAlC,CAAjB;AAKA,SAAON,MAAP;AACH,CAPD;AASA3B,KAAK,CAACwB,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CAAiCQ,QAAD,IAAc;AAC1C;AACA,SAAOA,QAAP;AACH,CAHD,EAGIC,KAAD,IAAW;AACV;AACA,MAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AAC/B5B,IAAAA,EAAE,CAAC6B,WAAH,GAAiBC,OAAO,CAACC,GAAR,CAAYC,sBAA7B;AACAhC,IAAAA,EAAE,CAACc,MAAH;AACH;;AACD,SAAOa,KAAP;AACH,CAVD,E,CAYA;AACA;AACA;;AACArC,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\nimport store from \"./utils/store\";\nimport { updateUserInfo } from \"./redux/actions/global\";\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport history from \"./utils/history\";\nimport { Provider } from \"react-redux\";\n\n\nconst kc = Keycloak(`/keycloak.json`);\n\nconst render = () => {\n    ReactDOM.render(\n        // Wrap Provider inside AppContainer\n        <Provider store={store}>\n            <Router history={history}>\n                <Switch>\n                    <App />\n                </Switch>\n            </Router>\n        </Provider>,\n        document.getElementById('app')\n    );\n};\n\nkc.init({ onLoad: \"check-sso\", checkLoginIframe: false }).success(authenticated => {\n    if (authenticated) {\n        if (kc.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n            store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n            render();\n        } else {\n            kc.logout();\n        }\n    } else {\n        kc.login();\n    }\n});\n\naxios.interceptors.request.use(config => {\n    config.headers = Object.assign({}, config.headers, {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + kc.token\n    });\n    return config;\n});\n\naxios.interceptors.response.use((response) => {\n    // Do something with response data\n    return response;\n}, (error) => {\n    // Do something with response error\n    if (error.response.status === 401) {\n        kc.redirectUri = process.env.REACT_APP_REDIRECT_URI;\n        kc.logout();\n    }\n    return error;\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}