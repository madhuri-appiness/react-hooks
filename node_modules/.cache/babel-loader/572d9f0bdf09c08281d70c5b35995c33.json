{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/components/searchFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport SearchInput from \"./searchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://jsonplaceholder.typicode.com/comments'; // 'https://example.com/api/items';\n\nconst DEBOUNCE_DELAY = 500;\n\nfunction SearchFilter() {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const onQueryChange = e => {\n    getAPIResponse(e.target.value);\n  };\n\n  const getAPIResponse = val => {\n    var config = {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    };\n    let result = axios.get(`${API_URL}`, config).then(res => {\n      if (val) {\n        setLoading(true);\n        let response = res.data;\n        setOptions(response);\n        setLoading(false);\n      } else {\n        setOptions([]);\n      }\n\n      return res.data;\n    });\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(SearchInput, {\n      loading: loading,\n      options: options,\n      requests: getAPIResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SearchFilter, \"t+IfsHiAhCrcZeSmj4fRE65iBt8=\");\n\n_c = SearchFilter;\n;\nexport default SearchFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilter\");","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/components/searchFilter.js"],"names":["React","useState","axios","SearchInput","API_URL","DEBOUNCE_DELAY","SearchFilter","options","setOptions","loading","setLoading","onQueryChange","e","getAPIResponse","target","value","val","config","headers","result","get","then","res","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,MAAMC,OAAO,GAAG,+CAAhB,C,CACA;;AACA,MAAMC,cAAc,GAAG,GAAvB;;AAKA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMU,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAIA,QAAMF,cAAc,GAAIG,GAAD,IAAS;AAC5B,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,uCAA+B,GAD1B;AAEL,wCAAgC;AAF3B;AADA,KAAb;AAMA,QAAIC,MAAM,GAAGjB,KAAK,CAACkB,GAAN,CAAW,GAAEhB,OAAQ,EAArB,EAAwBa,MAAxB,EAAgCI,IAAhC,CAAsCC,GAAD,IAAS;AACvD,UAAIN,GAAJ,EAAS;AACLN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAIa,QAAQ,GAAGD,GAAG,CAACE,IAAnB;AACAhB,QAAAA,UAAU,CAACe,QAAD,CAAV;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALD,MAKO;AACHF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH;;AACD,aAAOc,GAAG,CAACE,IAAX;AACH,KAVY,CAAb;AAWA,WAAOL,MAAP;AACH,GAnBD;;AAoBA,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACH,QAAC,WAAD;AACI,MAAA,OAAO,EAAEV,OADb;AAEI,MAAA,OAAO,EAAEF,OAFb;AAGI,MAAA,QAAQ,EAAEM;AAHd;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH;;GAnCQP,Y;;KAAAA,Y;AAmCR;AAGD,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport SearchInput from \"./searchBar\";\n\nconst API_URL = 'https://jsonplaceholder.typicode.com/comments'\n// 'https://example.com/api/items';\nconst DEBOUNCE_DELAY = 500;\n\n\n\n\nfunction SearchFilter() {\n    const [options, setOptions] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const onQueryChange = (e) => {\n        getAPIResponse(e.target.value);\n    }\n\n    const getAPIResponse = (val) => {\n        var config = {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n            }\n        };\n        let result = axios.get(`${API_URL}`, config).then((res) => {\n            if (val) {\n                setLoading(true);\n                let response = res.data;\n                setOptions(response);\n                setLoading(false);\n            } else {\n                setOptions([]);\n            }\n            return res.data\n        });\n        return result;\n    }\n    return <div className=\"wrapper\">\n        <SearchInput\n            loading={loading}\n            options={options}\n            requests={getAPIResponse}\n        />\n    </div>\n};\n\n\nexport default SearchFilter;"]},"metadata":{},"sourceType":"module"}