{"ast":null,"code":"import _classCallCheck from\"/home/madhuripatil/workspace/hooksapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/madhuripatil/workspace/hooksapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/madhuripatil/workspace/hooksapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/madhuripatil/workspace/hooksapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Keycloak from'keycloak-js';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var Secured=/*#__PURE__*/function(_Component){_inherits(Secured,_Component);var _super=_createSuper(Secured);function Secured(props){var _this;_classCallCheck(this,Secured);_this=_super.call(this,props);_this.state={keycloak:null,authenticated:false};return _this;}_createClass(Secured,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var keycloak=Keycloak('./keycloak.json');keycloak.init({onLoad:\"check-sso\",checkLoginIframe:false}).success(function(authenticated){if(authenticated){if(keycloak.realmAccess.roles.indexOf('ROLE_ADMIN')!==-1){// store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n_this2.setState({keycloak:keycloak,authenticated:authenticated});}else{keycloak.logout();}}else{keycloak.login();}});axios.interceptors.request.use(function(config){config.headers=Object.assign({},config.headers,{'Content-Type':'application/json',Accept:'application/json',Authorization:'Bearer '+keycloak.token});return config;});axios.interceptors.response.use(function(response){// Do something with response data\nreturn response;},function(error){// Do something with response error\nif(error.response.status===401){keycloak.redirectUri='http://localhost:3000';keycloak.logout();}return error;});}},{key:\"render\",value:function render(){console.log(this.state.keycloak,this.state.authenticated);if(this.state.keycloak){if(this.state.authenticated)return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"This is a Keycloak-secured component of your application. You shouldn't be able to see this unless you've authenticated with Keycloak.\"})});else return/*#__PURE__*/_jsx(\"div\",{children:\"Unable to authenticate!\"});}return/*#__PURE__*/_jsx(\"div\",{children:\"Initializing Keycloak...\"});}}]);return Secured;}(Component);export default Secured;","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/components/secure.js"],"names":["React","Component","Keycloak","axios","Secured","props","state","keycloak","authenticated","init","onLoad","checkLoginIframe","success","realmAccess","roles","indexOf","setState","logout","login","interceptors","request","use","config","headers","Object","assign","Accept","Authorization","token","response","error","status","redirectUri","console","log"],"mappings":"gmBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,8CAEMC,CAAAA,O,kGAEJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,aAAa,CAAE,KAAjC,CAAb,CAFiB,aAGlB,C,qDAED,4BAAoB,iBAClB,GAAMD,CAAAA,QAAQ,CAAGL,QAAQ,CAAC,iBAAD,CAAzB,CACAK,QAAQ,CAACE,IAAT,CAAc,CAAEC,MAAM,CAAE,WAAV,CAAuBC,gBAAgB,CAAE,KAAzC,CAAd,EAAgEC,OAAhE,CAAwE,SAAAJ,aAAa,CAAI,CACvF,GAAIA,aAAJ,CAAmB,CACjB,GAAID,QAAQ,CAACM,WAAT,CAAqBC,KAArB,CAA2BC,OAA3B,CAAmC,YAAnC,IAAqD,CAAC,CAA1D,CAA6D,CAC3D;AACA,MAAI,CAACC,QAAL,CAAc,CAAET,QAAQ,CAAEA,QAAZ,CAAsBC,aAAa,CAAEA,aAArC,CAAd,EACD,CAHD,IAGO,CACLD,QAAQ,CAACU,MAAT,GACD,CACF,CAPD,IAOO,CACLV,QAAQ,CAACW,KAAT,GACD,CACF,CAXD,EAYAf,KAAK,CAACgB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAAAC,MAAM,CAAI,CACvCA,MAAM,CAACC,OAAP,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBH,MAAM,CAACC,OAAzB,CAAkC,CACjD,eAAgB,kBADiC,CAEjDG,MAAM,CAAE,kBAFyC,CAGjDC,aAAa,CAAE,UAAYpB,QAAQ,CAACqB,KAHa,CAAlC,CAAjB,CAKA,MAAON,CAAAA,MAAP,CACD,CAPD,EASAnB,KAAK,CAACgB,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CAAgC,SAACQ,QAAD,CAAc,CAC5C;AACA,MAAOA,CAAAA,QAAP,CACD,CAHD,CAGG,SAACC,KAAD,CAAW,CACZ;AACA,GAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,GAA0B,GAA9B,CAAmC,CACjCxB,QAAQ,CAACyB,WAAT,CAAuB,uBAAvB,CACAzB,QAAQ,CAACU,MAAT,GACD,CACD,MAAOa,CAAAA,KAAP,CACD,CAVD,EAWD,C,sBAED,iBAAS,CACPG,OAAO,CAACC,GAAR,CAAY,KAAK5B,KAAL,CAAWC,QAAvB,CAAiC,KAAKD,KAAL,CAAWE,aAA5C,EACA,GAAI,KAAKF,KAAL,CAAWC,QAAf,CAAyB,CACvB,GAAI,KAAKD,KAAL,CAAWE,aAAf,CAA8B,mBAC5B,kCACE,6JADF,EAD4B,CAA9B,IAKQ,oBAAQ,gDAAR,CACT,CACD,mBACE,iDADF,CAGD,C,qBAxDmBP,S,EA0DtB,cAAeG,CAAAA,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\n\nclass Secured extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { keycloak: null, authenticated: false };\n  }\n\n  componentDidMount() {\n    const keycloak = Keycloak('./keycloak.json');\n    keycloak.init({ onLoad: \"check-sso\", checkLoginIframe: false }).success(authenticated => {\n      if (authenticated) {\n        if (keycloak.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n          // store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n          this.setState({ keycloak: keycloak, authenticated: authenticated })\n        } else {\n          keycloak.logout();\n        }\n      } else {\n        keycloak.login();\n      }\n    });\n    axios.interceptors.request.use(config => {\n      config.headers = Object.assign({}, config.headers, {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + keycloak.token\n      });\n      return config;\n    });\n\n    axios.interceptors.response.use((response) => {\n      // Do something with response data\n      return response;\n    }, (error) => {\n      // Do something with response error\n      if (error.response.status === 401) {\n        keycloak.redirectUri = 'http://localhost:3000';\n        keycloak.logout();\n      }\n      return error;\n    });\n  }\n\n  render() {\n    console.log(this.state.keycloak, this.state.authenticated)\n    if (this.state.keycloak) {\n      if (this.state.authenticated) return (\n        <div>\n          <p>This is a Keycloak-secured component of your application. You shouldn't be able\n            to see this unless you've authenticated with Keycloak.</p>\n        </div>\n      ); else return (<div>Unable to authenticate!</div>)\n    }\n    return (\n      <div>Initializing Keycloak...</div>\n    );\n  }\n}\nexport default Secured;"]},"metadata":{},"sourceType":"module"}