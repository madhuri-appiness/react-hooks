{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/actions/user.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport store from \"../utils/store\";\nimport { message, Icon } from 'antd';\nimport { SET_USER_DATA } from '../actions/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = process.env.API_HOST;\nexport function setUserData(content) {\n  return {\n    type: SET_USER_DATA,\n    content\n  };\n}\nexport function updateUserProps(obj) {\n  return dispatch => {\n    dispatch(setUserData({\n      obj\n    }));\n  };\n}\nexport function getUserInfo(email) {\n  const st = store.getState();\n  const isAlreadyFetched = st && st.user && st.user.userId && st.user.emailId && st.user.emailId === email ? true : false;\n\n  if (!isAlreadyFetched) {\n    const config = {\n      headers: {\n        email: email\n      }\n    };\n    return dispatch => {\n      return axios.get(baseURL + 'api/user/single-user', config).then(response => {\n        if (response.data.body) {\n          dispatch(setUserData({\n            userId: response.data.body.id,\n            userName: response.data.body.userName,\n            userRole: response.data.body.userRole,\n            preferredUserName: response.data.body.preferredUserName,\n            isProjectExist: response.data.body.isProjectExist,\n            isFirstLogin: response.data.body.isFirstLogin\n          }));\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  } else {\n    return dispatch => {};\n  }\n}\nexport function getUserDetail(editUserId) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      \"X-UserId\": st.user.userId\n    }\n  };\n  return dispatch => {\n    return axios.get(baseURL + 'api/admin/fetch-edit-user-details?editUserId=' + editUserId, config).then(response => {\n      if (response && response.data && response.data.status === 200 && response.data.body) {\n        return response.data.body;\n      } else {\n        message.error({\n          content: \"There is an error in fetching user detail\",\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"close-circle\",\n            style: {\n              color: 'red',\n              fontSize: '42px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this),\n          top: 10\n        });\n        return false;\n      }\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  };\n}\nexport function updateUserInfo(obj, keycloak) {\n  return dispatch => {\n    dispatch(setUserData({\n      emailId: obj.email,\n      keycloak: keycloak\n    }));\n  };\n} // create user API\n\nexport function createUser(formData) {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  return dispatch => {\n    return axios.post(baseURL + 'api/admin/create-user', formData, config).then(response => {\n      dispatch(setUserData({}));\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n} // edit user API\n\nexport function editUser(formData) {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  return dispatch => {\n    return axios.post(baseURL + 'api/admin/edit-user', formData, config).then(response => {\n      dispatch(setUserData({}));\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function clearFetchUsers() {\n  return dispatch => {\n    dispatch(setUserData({\n      usersList: []\n    }));\n  };\n} // fetch user API\n\nexport function fetchUsers(obj) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      \"X-UserId\": st.user.userId\n    }\n  };\n  return dispatch => {\n    return axios.post(baseURL + 'api/admin/fetch-view-users', obj, config).then(response => {\n      if (response && response.data && response.data.body) {\n        const dataBody = response.data.body;\n        dispatch(setUserData({\n          usersList: dataBody.userAdminDtoList,\n          totalRecords: dataBody.totalRecords,\n          totalPages: dataBody.totalPages\n        }));\n        return dataBody.userAdminDtoList;\n      } else {\n        message.error({\n          content: \"There is an error in fetching the user\",\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            type: \"close-circle\",\n            style: {\n              color: 'red',\n              fontSize: '42px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this),\n          top: 10\n        });\n        dispatch(setUserData({\n          usersList: []\n        }));\n        return [];\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n} // export function fetchAgencyList() {\n//   return (dispatch) => {\n//     return axios.get(baseURL + 'api/agency/list').then((response) => {\n//       if (response.status = 200) {\n//         dispatch(setUserData({\n//           agencyArr: response.data.body\n//         }));\n//       }\n//       return response.data.body;\n//     }).catch((error) => {\n//       console.log(error);\n//     });\n//   }\n// }\n\nexport function updateUserStatus(id) {\n  return dispatch => {\n    return axios.put(baseURL + 'api/admin/update-status', {\n      userId: id\n    }).then(response => {\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function fetchBrandList() {\n  return dispatch => {\n    return axios.get(baseURL + 'api/agency/brand-list').then(response => {\n      if (response.status = 200) {\n        dispatch(setUserData({\n          brandArr: response.data.body\n        }));\n      }\n\n      return response.data.body;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n} // Removed below code during the implementation of medical\n// export function fetchCountryCodeList() {\n//   return (dispatch) => {\n//     return axios.get(baseURL + 'api/country/getAllCountryCode').then((response) => {\n//       dispatch(setUserData({\n//         countryCodeArr: response.data\n//       }));\n//       return response.data;\n//     }).catch((error) => {\n//       console.log(error);\n//     });\n//   }\n// }\n\nexport function updateUserObj(obj) {\n  return dispatch => {\n    dispatch(setUserData(obj));\n  };\n}\nexport function getBmUserData() {\n  const st = store.getState();\n  const config = {\n    headers: {\n      UserID: st.user.userId\n    }\n  };\n  return dispatch => {\n    return axios.get(baseURL + 'api/admin/master-data', config).then(response => {\n      if (response.data.status === 200) {\n        dispatch(setUserData({\n          bmUserData: {\n            languageArr: [],\n            campaignTypeArr: [],\n            brandArr: [],\n            countryArr: [],\n            roleArr: response.data.body.masterRole,\n            regionDetails: [],\n            businessUnits: response.data.body.businessUnits ? response.data.body.businessUnits : [],\n            adminMasterDataLoad: true\n          }\n        }));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function downloadCSV(businessUnitId) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      UserID: st.user.userId,\n      businessUnitId: businessUnitId\n    },\n    responseType: \"blob\"\n  };\n  return dispatch => {\n    return axios.post(baseURL + 'api/admin/download-all-users', {}, config).then(response => {\n      return response;\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  };\n}\nexport function fetchUnapprovedUsers() {\n  return dispatch => {\n    return axios.get(baseURL + 'api/admin/fetch-unapproved-users').then(response => {\n      dispatch(setUserData({\n        unapprovedUsersList: response.data.body\n      }));\n      return response.data.body;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function getOpenMasterData() {\n  return dispatch => {\n    return axios.get(baseURL + 'opapi/master-data').then(response => {\n      if (response && response.data && response.data.status === 200) {\n        dispatch(setUserData({\n          opapiMasterdataLoaded: true,\n          opapiData: response.data.body\n        }));\n      } else {\n        dispatch(setUserData({\n          opapiMasterdataLoaded: false,\n          opapiData: {}\n        }));\n      }\n\n      return response;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function actionOnUser(obj) {\n  return dispatch => {\n    return axios.post(baseURL + 'api/admin/action-on-user', obj).then(response => {\n      return response;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function submitDownloadRequest(buId) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      UserID: st.user.userId,\n      businessUnitId: buId\n    }\n  };\n  return dispatch => {\n    return axios.get(baseURL + 'opapi/download-all-projects?userId=0', config).then(response => {\n      return response;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function getLanguageList() {\n  return dispatch => {\n    return axios.get(baseURL + 'opapi/app-multilingual-language-list').then(res => {\n      dispatch(setUserData({\n        localeArr: res && res.data && res.data.body ? res.data.body : []\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/actions/user.js"],"names":["React","axios","store","message","Icon","SET_USER_DATA","baseURL","process","env","API_HOST","setUserData","content","type","updateUserProps","obj","dispatch","getUserInfo","email","st","getState","isAlreadyFetched","user","userId","emailId","config","headers","get","then","response","data","body","id","userName","userRole","preferredUserName","isProjectExist","isFirstLogin","catch","error","console","log","getUserDetail","editUserId","status","icon","color","fontSize","top","updateUserInfo","keycloak","createUser","formData","post","editUser","clearFetchUsers","usersList","fetchUsers","dataBody","userAdminDtoList","totalRecords","totalPages","updateUserStatus","put","fetchBrandList","brandArr","updateUserObj","getBmUserData","UserID","bmUserData","languageArr","campaignTypeArr","countryArr","roleArr","masterRole","regionDetails","businessUnits","adminMasterDataLoad","downloadCSV","businessUnitId","responseType","fetchUnapprovedUsers","unapprovedUsersList","getOpenMasterData","opapiMasterdataLoaded","opapiData","actionOnUser","submitDownloadRequest","buId","getLanguageList","res","localeArr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport store from \"../utils/store\";\nimport { message, Icon } from 'antd';\nimport { SET_USER_DATA } from '../actions/types';\n\nconst baseURL = process.env.API_HOST;\n\nexport function setUserData(content) {\n  return {\n    type: SET_USER_DATA,\n    content,\n  };\n}\n\nexport function updateUserProps(obj) {\n  return (dispatch) => {\n    dispatch(setUserData({ obj }));\n  };\n}\n\nexport function getUserInfo(email) {\n  const st = store.getState();\n  const isAlreadyFetched = st && st.user && st.user.userId && st.user.emailId && st.user.emailId === email ? true : false;\n  if (!isAlreadyFetched) {\n    const config = {\n      headers: { email: email }\n    };\n    return (dispatch) => {\n      return axios.get(baseURL + 'api/user/single-user', config).then((response) => {\n        if (response.data.body) {\n          dispatch(setUserData({\n            userId: response.data.body.id,\n            userName: response.data.body.userName,\n            userRole: response.data.body.userRole,\n            preferredUserName: response.data.body.preferredUserName,\n            isProjectExist: response.data.body.isProjectExist,\n            isFirstLogin: response.data.body.isFirstLogin,\n          }));\n        }\n      }).catch((error) => {\n        console.log(error);\n      });\n    };\n  }\n  else {\n    return (dispatch) => { };\n  }\n}\n\nexport function getUserDetail(editUserId) {\n  const st = store.getState();\n  const config = {\n    headers: { \"X-UserId\": st.user.userId }\n  };\n  return (dispatch) => {\n    return axios.get(baseURL + 'api/admin/fetch-edit-user-details?editUserId=' + editUserId, config).then((response) => {\n      if (response && response.data && response.data.status === 200 && response.data.body) {\n        return response.data.body\n      } else {\n        message.error({\n          content: \"There is an error in fetching user detail\",\n          icon: <Icon type=\"close-circle\" style={{ color: 'red', fontSize: '42px' }} />,\n          top: 10\n        });\n        return false\n      }\n    }).catch((error) => {\n      console.log(error);\n      return false\n    });\n  };\n}\n\nexport function updateUserInfo(obj, keycloak) {\n  return (dispatch) => {\n    dispatch(setUserData({\n      emailId: obj.email,\n      keycloak: keycloak\n    }));\n  };\n}\n\n// create user API\nexport function createUser(formData) {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  }\n  return (dispatch) => {\n    return axios.post(baseURL + 'api/admin/create-user', formData, config).then((response) => {\n      dispatch(setUserData({\n\n      }));\n      return response.data;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\n// edit user API\nexport function editUser(formData) {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  }\n  return (dispatch) => {\n    return axios.post(baseURL + 'api/admin/edit-user', formData, config).then((response) => {\n      dispatch(setUserData({\n\n      }));\n      return response.data;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function clearFetchUsers() {\n  return (dispatch) => {\n    dispatch(setUserData({\n      usersList: []\n    }));\n  };\n}\n\n// fetch user API\nexport function fetchUsers(obj) {\n  const st = store.getState();\n  const config = {\n    headers: { \"X-UserId\": st.user.userId }\n  };\n  return (dispatch) => {\n    return axios.post(baseURL + 'api/admin/fetch-view-users', obj, config).then((response) => {\n      if (response && response.data && response.data.body) {\n        const dataBody = response.data.body;\n        dispatch(setUserData({\n          usersList: dataBody.userAdminDtoList,\n          totalRecords: dataBody.totalRecords,\n          totalPages: dataBody.totalPages\n        }));\n        return dataBody.userAdminDtoList;\n      }\n      else {\n        message.error({\n          content: \"There is an error in fetching the user\",\n          icon: <Icon type=\"close-circle\" style={{ color: 'red', fontSize: '42px' }} />,\n          top: 10\n        });\n        dispatch(setUserData({\n          usersList: [],\n        }));\n        return []\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\n// export function fetchAgencyList() {\n//   return (dispatch) => {\n//     return axios.get(baseURL + 'api/agency/list').then((response) => {\n//       if (response.status = 200) {\n//         dispatch(setUserData({\n//           agencyArr: response.data.body\n//         }));\n//       }\n//       return response.data.body;\n//     }).catch((error) => {\n//       console.log(error);\n//     });\n//   }\n// }\n\nexport function updateUserStatus(id) {\n  return (dispatch) => {\n    return axios.put(baseURL + 'api/admin/update-status', { userId: id }).then((response) => {\n      return response.data;\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function fetchBrandList() {\n  return (dispatch) => {\n    return axios.get(baseURL + 'api/agency/brand-list').then((response) => {\n      if (response.status = 200) {\n        dispatch(setUserData({\n          brandArr: response.data.body\n        }));\n      }\n      return response.data.body;\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n}\n\n// Removed below code during the implementation of medical\n// export function fetchCountryCodeList() {\n//   return (dispatch) => {\n//     return axios.get(baseURL + 'api/country/getAllCountryCode').then((response) => {\n//       dispatch(setUserData({\n//         countryCodeArr: response.data\n//       }));\n//       return response.data;\n//     }).catch((error) => {\n//       console.log(error);\n//     });\n//   }\n// }\n\nexport function updateUserObj(obj) {\n  return (dispatch) => {\n    dispatch(setUserData(obj));\n  };\n}\n\nexport function getBmUserData() {\n  const st = store.getState();\n  const config = {\n    headers: { UserID: st.user.userId }\n  };\n\n  return (dispatch) => {\n    return axios.get(baseURL + 'api/admin/master-data', config).then((response) => {\n      if (response.data.status === 200) {\n        dispatch(setUserData({\n          bmUserData: {\n            languageArr: [],\n            campaignTypeArr: [],\n            brandArr: [],\n            countryArr: [],\n            roleArr: response.data.body.masterRole,\n            regionDetails: [],\n            businessUnits: response.data.body.businessUnits ? response.data.body.businessUnits : [],\n            adminMasterDataLoad: true\n          },\n        }));\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function downloadCSV(businessUnitId) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      UserID: st.user.userId,\n      businessUnitId: businessUnitId\n    },\n    responseType: \"blob\"\n  };\n  return (dispatch) => {\n    return axios.post(baseURL + 'api/admin/download-all-users', {}, config).then((response) => {\n      return response;\n    }).catch((error) => {\n      console.log(error);\n      return false;\n    });\n  };\n}\n\nexport function fetchUnapprovedUsers() {\n  return (dispatch) => {\n    return axios.get(baseURL + 'api/admin/fetch-unapproved-users').then((response) => {\n      dispatch(setUserData({\n        unapprovedUsersList: response.data.body\n      }));\n      return response.data.body;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function getOpenMasterData() {\n  return (dispatch) => {\n    return axios.get(baseURL + 'opapi/master-data').then((response) => {\n      if (response && response.data && response.data.status === 200) {\n        dispatch(setUserData({\n          opapiMasterdataLoaded: true,\n          opapiData: response.data.body\n        }));\n      } else {\n        dispatch(setUserData({\n          opapiMasterdataLoaded: false,\n          opapiData: {}\n        }));\n      }\n      return response;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function actionOnUser(obj) {\n  return (dispatch) => {\n    return axios.post(baseURL + 'api/admin/action-on-user', obj).then((response) => {\n      return response;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function submitDownloadRequest(buId) {\n  const st = store.getState();\n  const config = {\n    headers: {\n      UserID: st.user.userId,\n      businessUnitId: buId\n    }\n  };\n  return (dispatch) => {\n    return axios.get(baseURL + 'opapi/download-all-projects?userId=0', config).then((response) => {\n      return response;\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n\nexport function getLanguageList() {\n  return (dispatch) => {\n    return axios.get(baseURL + 'opapi/app-multilingual-language-list').then((res) => {\n      dispatch(setUserData({\n        localeArr: res && res.data && res.data.body ? res.data.body : []\n      }));\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}