{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Keycloak from 'keycloak-js'; //keycloak init options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initOptions = {\n  url: 'http://192.0.0.220:8080/auth/',\n  realm: 'non-amgen',\n  clientId: 'hooksapp',\n  onLoad: 'login-required'\n};\nlet keycloak = Keycloak(initOptions);\nkeycloak.init({\n  onLoad: initOptions.onLoad\n}).success(auth => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    console.info(\"Authenticated\");\n  } //React Render\n\n\n  ReactDOM.render(\n  /*#__PURE__*/\n  // <React.StrictMode>\n  _jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this), // </React.StrictMode>,\n  document.getElementById('root'));\n  localStorage.setItem(\"react-token\", keycloak.token);\n  localStorage.setItem(\"react-refresh-token\", keycloak.refreshToken);\n  setTimeout(() => {\n    keycloak.updateToken(70).success(refreshed => {\n      if (refreshed) {\n        console.debug('Token refreshed' + refreshed);\n      } else {\n        console.warn('Token not refreshed, valid for ' + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n      }\n    }).error(() => {\n      console.error('Failed to refresh token');\n    });\n  }, 60000);\n}).error(() => {\n  console.error(\"Authenticated Failed\");\n}); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Keycloak","initOptions","url","realm","clientId","onLoad","keycloak","init","success","auth","window","location","reload","console","info","render","document","getElementById","localStorage","setItem","token","refreshToken","setTimeout","updateToken","refreshed","debug","warn","Math","round","tokenParsed","exp","timeSkew","Date","getTime","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAKA;;;AACA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,+BADW;AACsBC,EAAAA,KAAK,EAAE,WAD7B;AAC0CC,EAAAA,QAAQ,EAAE,UADpD;AACgEC,EAAAA,MAAM,EAAE;AADxE,CAAlB;AAKA,IAAIC,QAAQ,GAAGN,QAAQ,CAACC,WAAD,CAAvB;AAEAK,QAAQ,CAACC,IAAT,CAAc;AAAEF,EAAAA,MAAM,EAAEJ,WAAW,CAACI;AAAtB,CAAd,EAA8CG,OAA9C,CAAuDC,IAAD,IAAU;AAE9D,MAAI,CAACA,IAAL,EAAW;AACTC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACD,GAN6D,CAQ9D;;;AACAjB,EAAAA,QAAQ,CAACkB,MAAT;AAAA;AACE;AACE,UAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGE;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCb,QAAQ,CAACc,KAA7C;AACAF,EAAAA,YAAY,CAACC,OAAb,CAAqB,qBAArB,EAA4Cb,QAAQ,CAACe,YAArD;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfhB,IAAAA,QAAQ,CAACiB,WAAT,CAAqB,EAArB,EAAyBf,OAAzB,CAAkCgB,SAAD,IAAe;AAC9C,UAAIA,SAAJ,EAAe;AACbX,QAAAA,OAAO,CAACY,KAAR,CAAc,oBAAoBD,SAAlC;AACD,OAFD,MAEO;AACLX,QAAAA,OAAO,CAACa,IAAR,CAAa,oCACTC,IAAI,CAACC,KAAL,CAAWtB,QAAQ,CAACuB,WAAT,CAAqBC,GAArB,GAA2BxB,QAAQ,CAACyB,QAApC,GAA+C,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAjF,CADS,GACgF,UAD7F;AAED;AACF,KAPD,EAOGC,KAPH,CAOS,MAAM;AACbrB,MAAAA,OAAO,CAACqB,KAAR,CAAc,yBAAd;AACD,KATD;AAYD,GAbS,EAaP,KAbO,CAAV;AAeD,CAlCD,EAkCGA,KAlCH,CAkCS,MAAM;AACbrB,EAAAA,OAAO,CAACqB,KAAR,CAAc,sBAAd;AACD,CApCD,E,CAsCA;AACA;AACA;;AACAnC,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Keycloak from 'keycloak-js';\n\n\n\n\n//keycloak init options\nlet initOptions = {\n  url: 'http://192.0.0.220:8080/auth/', realm: 'non-amgen', clientId: 'hooksapp', onLoad: 'login-required'\n}\n\n\nlet keycloak = Keycloak(initOptions);\n\nkeycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n\n  if (!auth) {\n    window.location.reload();\n  } else {\n    console.info(\"Authenticated\");\n  }\n\n  //React Render\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n  localStorage.setItem(\"react-token\", keycloak.token);\n  localStorage.setItem(\"react-refresh-token\", keycloak.refreshToken);\n\n  setTimeout(() => {\n    keycloak.updateToken(70).success((refreshed) => {\n      if (refreshed) {\n        console.debug('Token refreshed' + refreshed);\n      } else {\n        console.warn('Token not refreshed, valid for '\n          + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n      }\n    }).error(() => {\n      console.error('Failed to refresh token');\n    });\n\n\n  }, 60000)\n\n}).error(() => {\n  console.error(\"Authenticated Failed\");\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}