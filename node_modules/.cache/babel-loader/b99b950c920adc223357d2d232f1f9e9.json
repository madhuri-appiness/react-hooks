{"ast":null,"code":"import { SET_CLAIM_PROJECT_DATA } from '../../constants/actionTypes';\nconst INITIAL_STATE = {\n  brands: [],\n  channels: [],\n  countries: [],\n  projects: [],\n  brandIds: [],\n  channelIds: [],\n  subChannelIds: [],\n  requestTypeIds: [],\n  countryIds: [],\n  channelList: [],\n  regions: [],\n  complexities: [],\n  userList: [],\n  regionIds: [],\n  complexityIds: [],\n  userIds: [],\n  groupName: \"\",\n  defaultGroupExist: false,\n  totalClaimGroups: [],\n  targetKeys: [],\n  groupUsers: [],\n  groupId: 0,\n  isDefault: false,\n  mode: \"\",\n  filteredResult: [],\n  openAdvanceFilter: false,\n  fromDate: \"\",\n  toDate: \"\",\n  onAdvanceFilter: false,\n  loadedRecords: 0,\n  totalRecords: 10,\n  unclaimProjects: [],\n  projectDetails: {},\n  projectOwners: [],\n  projectOwnerIds: [],\n  fromDate: \"\",\n  toDate: \"\",\n  projectManagerIds: [],\n  searchKey: \"\",\n  subCategories: [],\n  requestTypes: [],\n  listBPMTasks: [],\n  unclaimProjListDataLoading: true\n};\nexport default ((state = INITIAL_STATE, action = {}) => {\n  switch (action.type) {\n    case SET_CLAIM_PROJECT_DATA:\n      return { ...state,\n        ...action.content\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/redux/reducers/claimProject.js"],"names":["SET_CLAIM_PROJECT_DATA","INITIAL_STATE","brands","channels","countries","projects","brandIds","channelIds","subChannelIds","requestTypeIds","countryIds","channelList","regions","complexities","userList","regionIds","complexityIds","userIds","groupName","defaultGroupExist","totalClaimGroups","targetKeys","groupUsers","groupId","isDefault","mode","filteredResult","openAdvanceFilter","fromDate","toDate","onAdvanceFilter","loadedRecords","totalRecords","unclaimProjects","projectDetails","projectOwners","projectOwnerIds","projectManagerIds","searchKey","subCategories","requestTypes","listBPMTasks","unclaimProjListDataLoading","state","action","type","content"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,6BAAvC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,QAAQ,EAAE,EAJU;AAKpBC,EAAAA,QAAQ,EAAE,EALU;AAMpBC,EAAAA,UAAU,EAAE,EANQ;AAOpBC,EAAAA,aAAa,EAAE,EAPK;AAQpBC,EAAAA,cAAc,EAAE,EARI;AASpBC,EAAAA,UAAU,EAAE,EATQ;AAUpBC,EAAAA,WAAW,EAAE,EAVO;AAWpBC,EAAAA,OAAO,EAAE,EAXW;AAYpBC,EAAAA,YAAY,EAAE,EAZM;AAapBC,EAAAA,QAAQ,EAAE,EAbU;AAcpBC,EAAAA,SAAS,EAAE,EAdS;AAepBC,EAAAA,aAAa,EAAE,EAfK;AAgBpBC,EAAAA,OAAO,EAAC,EAhBY;AAiBpBC,EAAAA,SAAS,EAAE,EAjBS;AAkBpBC,EAAAA,iBAAiB,EAAE,KAlBC;AAmBpBC,EAAAA,gBAAgB,EAAE,EAnBE;AAoBpBC,EAAAA,UAAU,EAAE,EApBQ;AAqBpBC,EAAAA,UAAU,EAAE,EArBQ;AAsBpBC,EAAAA,OAAO,EAAE,CAtBW;AAuBpBC,EAAAA,SAAS,EAAE,KAvBS;AAwBpBC,EAAAA,IAAI,EAAE,EAxBc;AAyBpBC,EAAAA,cAAc,EAAE,EAzBI;AA0BpBC,EAAAA,iBAAiB,EAAE,KA1BC;AA2BpBC,EAAAA,QAAQ,EAAE,EA3BU;AA4BpBC,EAAAA,MAAM,EAAE,EA5BY;AA6BpBC,EAAAA,eAAe,EAAE,KA7BG;AA8BpBC,EAAAA,aAAa,EAAE,CA9BK;AA+BpBC,EAAAA,YAAY,EAAE,EA/BM;AAgCpBC,EAAAA,eAAe,EAAE,EAhCG;AAiCpBC,EAAAA,cAAc,EAAE,EAjCI;AAkCpBC,EAAAA,aAAa,EAAE,EAlCK;AAmCpBC,EAAAA,eAAe,EAAE,EAnCG;AAoCpBR,EAAAA,QAAQ,EAAE,EApCU;AAqCpBC,EAAAA,MAAM,EAAE,EArCY;AAsCpBQ,EAAAA,iBAAiB,EAAE,EAtCC;AAuCpBC,EAAAA,SAAS,EAAE,EAvCS;AAwCpBC,EAAAA,aAAa,EAAE,EAxCK;AAyCpBC,EAAAA,YAAY,EAAE,EAzCM;AA0CpBC,EAAAA,YAAY,EAAE,EA1CM;AA2CpBC,EAAAA,0BAA0B,EAAE;AA3CR,CAAtB;AA8CA,gBAAe,CAACC,KAAK,GAAG1C,aAAT,EAAwB2C,MAAM,GAAG,EAAjC,KAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK7C,sBAAL;AACE,aAAO,EACL,GAAG2C,KADE;AAEL,WAAGC,MAAM,CAACE;AAFL,OAAP;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD","sourcesContent":["import { SET_CLAIM_PROJECT_DATA } from '../../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  brands: [],\n  channels: [],\n  countries: [],\n  projects: [],\n  brandIds: [],\n  channelIds: [],\n  subChannelIds: [],\n  requestTypeIds: [],\n  countryIds: [],\n  channelList: [],\n  regions: [],\n  complexities: [],\n  userList: [],\n  regionIds: [],\n  complexityIds: [],\n  userIds:[],\n  groupName: \"\",\n  defaultGroupExist: false,\n  totalClaimGroups: [],\n  targetKeys: [],\n  groupUsers: [],\n  groupId: 0,\n  isDefault: false,\n  mode: \"\",\n  filteredResult: [],\n  openAdvanceFilter: false,\n  fromDate: \"\",\n  toDate: \"\",\n  onAdvanceFilter: false,\n  loadedRecords: 0,\n  totalRecords: 10,\n  unclaimProjects: [],\n  projectDetails: {},\n  projectOwners: [],\n  projectOwnerIds: [],\n  fromDate: \"\",\n  toDate: \"\",\n  projectManagerIds: [],\n  searchKey: \"\",\n  subCategories: [],\n  requestTypes: [],\n  listBPMTasks: [],\n  unclaimProjListDataLoading: true\n};\n\nexport default (state = INITIAL_STATE, action = {}) => {\n  switch (action.type) {\n    case SET_CLAIM_PROJECT_DATA:\n      return {\n        ...state,\n        ...action.content,\n      };\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}