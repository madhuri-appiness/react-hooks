{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/components/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchInput({\n  loading,\n  options,\n  requests,\n  placeholder\n}) {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const debounceSave = useCallback(debounce(val => requests(val), 500), []);\n\n  const updateValue = newValue => {\n    setInputValue(newValue);\n    debounceSave(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: e => updateValue(e.target.value),\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchInput, \"YMkIWd66bUskH2oHuEEyF00f7rQ=\");\n\n_c = SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/components/searchBar.js"],"names":["React","useState","useCallback","debounce","SearchInput","loading","options","requests","placeholder","inputValue","setInputValue","debounceSave","val","updateValue","newValue","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAChCC,EAAAA,OADgC;AAEhCC,EAAAA,OAFgC;AAGhCC,EAAAA,QAHgC;AAIhCC,EAAAA;AAJgC,CAArB,EAKZ;AAAA;;AACC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMU,YAAY,GAAGT,WAAW,CAACC,QAAQ,CAAES,GAAD,IAAQL,QAAQ,CAACK,GAAD,CAAjB,EAAuB,GAAvB,CAAT,EAAqC,EAArC,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9BJ,IAAAA,aAAa,CAACI,QAAD,CAAb;AACAH,IAAAA,YAAY,CAACG,QAAD,CAAZ;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,KAAK,EAAEL,UADX;AAEI,MAAA,QAAQ,EAAGM,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAGI,MAAA,WAAW,EAAET;AAHjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAlCuBJ,W;;KAAAA,W","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport debounce from 'lodash.debounce';\n\nexport default function SearchInput({\n    loading,\n    options,\n    requests,\n    placeholder,\n}) {\n    const [inputValue, setInputValue] = useState('');\n\n    const debounceSave = useCallback(debounce((val)=> requests(val),500),[])\n\n    const updateValue = (newValue) => {\n        setInputValue(newValue);\n        debounceSave(newValue);\n    };\n    return (\n        <div>\n            <h3>Search Filter</h3>\n            <input\n                value={inputValue}\n                onChange={(e) => updateValue(e.target.value)}\n                placeholder={placeholder}\n            />\n          {/* {console.log(options)}\n                <ul>\n                    {loading && <li>Loading...</li>}\n                    {options?.length > 0 &&\n                        !loading &&\n                        options?.map((value, index) => (\n                            <li key={`${value.name}-${index}`}>{value.name}</li>\n                        ))}\n                </ul> */}\n            \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}