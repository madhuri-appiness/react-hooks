{"ast":null,"code":"var _jsxFileName = \"/home/madhuripatil/workspace/hooksapp/src/components/secure.js\";\nimport React, { Component } from 'react';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Secured extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keycloak: null,\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    const keycloak = Keycloak('/keycloak.json');\n    keycloak.init({\n      onLoad: \"login-required\",\n      checkLoginIframe: false\n    }).success(authenticated => {\n      if (authenticated) {\n        if (keycloak.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n          // store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n          this.setState({\n            keycloak: keycloak,\n            authenticated: authenticated\n          });\n        } else {\n          keycloak.logout();\n        }\n      } else {\n        keycloak.login();\n      }\n    });\n    axios.interceptors.request.use(config => {\n      config.headers = Object.assign({}, config.headers, {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + keycloak.token\n      });\n      console.log(keycloak.token);\n      return config;\n    });\n    axios.interceptors.response.use(response => {\n      // Do something with response data\n      console.log(response);\n      return response;\n    }, error => {\n      // Do something with response error\n      if (error.response.status === 401) {\n        keycloak.redirectUri = 'http://localhost:3000';\n        keycloak.logout();\n      }\n\n      return error;\n    });\n  }\n\n  render() {\n    console.log(this.state.keycloak, this.state.authenticated);\n\n    if (this.state.keycloak) {\n      if (this.state.authenticated) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a Keycloak-secured component of your application. You shouldn't be able to see this unless you've authenticated with Keycloak.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Unable to authenticate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Initializing Keycloak...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Secured;","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/components/secure.js"],"names":["React","Component","Keycloak","axios","Secured","constructor","props","state","keycloak","authenticated","componentDidMount","init","onLoad","checkLoginIframe","success","realmAccess","roles","indexOf","setState","logout","login","interceptors","request","use","config","headers","Object","assign","Accept","Authorization","token","console","log","response","error","status","redirectUri","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,aAAa,EAAE;AAAjC,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMF,QAAQ,GAAGN,QAAQ,CAAC,gBAAD,CAAzB;AACAM,IAAAA,QAAQ,CAACG,IAAT,CAAc;AAAEC,MAAAA,MAAM,EAAE,gBAAV;AAA4BC,MAAAA,gBAAgB,EAAE;AAA9C,KAAd,EAAqEC,OAArE,CAA6EL,aAAa,IAAI;AAC5F,UAAIA,aAAJ,EAAmB;AACjB,YAAID,QAAQ,CAACO,WAAT,CAAqBC,KAArB,CAA2BC,OAA3B,CAAmC,YAAnC,MAAqD,CAAC,CAA1D,EAA6D;AAC3D;AACA,eAAKC,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,YAAAA,aAAa,EAAEA;AAArC,WAAd;AACD,SAHD,MAGO;AACLD,UAAAA,QAAQ,CAACW,MAAT;AACD;AACF,OAPD,MAOO;AACLX,QAAAA,QAAQ,CAACY,KAAT;AACD;AACF,KAXD;AAYAjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvCA,MAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAM,CAACC,OAAzB,EAAkC;AACjD,wBAAgB,kBADiC;AAEjDG,QAAAA,MAAM,EAAE,kBAFyC;AAGjDC,QAAAA,aAAa,EAAE,YAAYrB,QAAQ,CAACsB;AAHa,OAAlC,CAAjB;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAQ,CAACsB,KAArB;AACA,aAAON,MAAP;AACD,KARD;AAUArB,IAAAA,KAAK,CAACkB,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CAAiCU,QAAD,IAAc;AAC5C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,aAAOA,QAAP;AACD,KAJD,EAIIC,KAAD,IAAW;AACZ;AACA,UAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjC3B,QAAAA,QAAQ,CAAC4B,WAAT,GAAuB,uBAAvB;AACA5B,QAAAA,QAAQ,CAACW,MAAT;AACD;;AACD,aAAOe,KAAP;AACD,KAXD;AAYD;;AAEDG,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWC,QAAvB,EAAiC,KAAKD,KAAL,CAAWE,aAA5C;;AACA,QAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACvB,UAAI,KAAKD,KAAL,CAAWE,aAAf,EAA8B,oBAC5B;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAD4B,CAA9B,KAKQ,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACT;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA1D6B;;AA4DhC,eAAeL,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\n\nclass Secured extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { keycloak: null, authenticated: false };\n  }\n\n  componentDidMount() {\n    const keycloak = Keycloak('/keycloak.json');\n    keycloak.init({ onLoad: \"login-required\", checkLoginIframe: false }).success(authenticated => {\n      if (authenticated) {\n        if (keycloak.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n          // store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n          this.setState({ keycloak: keycloak, authenticated: authenticated })\n        } else {\n          keycloak.logout();\n        }\n      } else {\n        keycloak.login();\n      }\n    });\n    axios.interceptors.request.use(config => {\n      config.headers = Object.assign({}, config.headers, {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + keycloak.token\n      });\n      console.log(keycloak.token)\n      return config;\n    });\n\n    axios.interceptors.response.use((response) => {\n      // Do something with response data\n      console.log(response)\n      return response;\n    }, (error) => {\n      // Do something with response error\n      if (error.response.status === 401) {\n        keycloak.redirectUri = 'http://localhost:3000';\n        keycloak.logout();\n      }\n      return error;\n    });\n  }\n\n  render() {\n    console.log(this.state.keycloak, this.state.authenticated)\n    if (this.state.keycloak) {\n      if (this.state.authenticated) return (\n        <div>\n          <p>This is a Keycloak-secured component of your application. You shouldn't be able\n            to see this unless you've authenticated with Keycloak.</p>\n        </div>\n      ); else return (<div>Unable to authenticate!</div>)\n    }\n    return (\n      <div>Initializing Keycloak...</div>\n    );\n  }\n}\nexport default Secured;"]},"metadata":{},"sourceType":"module"}