{"ast":null,"code":"import axios from \"axios\";\nimport Secured from \"./secured\";\nconst HttpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  DELETE: 'DELETE'\n};\nconst http = axios.create();\n\nconst configure = () => {\n  http.interceptors.request.use(config => {\n    const cb = () => {\n      config.headers.Authorization = `Bearer ${Secured.getToken()}`;\n      return Promise.resolve(config);\n    };\n\n    return Secured.updateToken(cb);\n  });\n};\n\nconst getAxiosClient = () => http;\n\nconst HttpService = {\n  HttpMethods,\n  configure,\n  getAxiosClient\n};","map":{"version":3,"sources":["/home/madhuripatil/workspace/hooksapp/src/services/httpService.js"],"names":["axios","Secured","HttpMethods","GET","POST","DELETE","http","create","configure","interceptors","request","use","config","cb","headers","Authorization","getToken","Promise","resolve","updateToken","getAxiosClient","HttpService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAC,KADY;AAEhBC,EAAAA,IAAI,EAAC,MAFW;AAGhBC,EAAAA,MAAM,EAAC;AAHS,CAApB;AAMA,MAAMC,IAAI,GAAGN,KAAK,CAACO,MAAN,EAAb;;AAEA,MAAMC,SAAS,GAAE,MAAI;AACjBF,EAAAA,IAAI,CAACG,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA+BC,MAAD,IAAU;AACpC,UAAMC,EAAE,GAAC,MAAI;AACTD,MAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAAgC,UAASd,OAAO,CAACe,QAAR,EAAmB,EAA5D;AACA,aAAOC,OAAO,CAACC,OAAR,CAAgBN,MAAhB,CAAP;AACH,KAHD;;AAIA,WAAOX,OAAO,CAACkB,WAAR,CAAoBN,EAApB,CAAP;AACH,GAND;AAOH,CARD;;AAUA,MAAMO,cAAc,GAAE,MAAKd,IAA3B;;AAEA,MAAMe,WAAW,GAAE;AACfnB,EAAAA,WADe;AAEfM,EAAAA,SAFe;AAGfY,EAAAA;AAHe,CAAnB","sourcesContent":["import axios from \"axios\";\nimport Secured from \"./secured\";\n\nconst HttpMethods = {\n    GET:'GET',\n    POST:'POST',\n    DELETE:'DELETE'\n}\n\nconst http = axios.create();\n\nconst configure =()=>{\n    http.interceptors.request.use((config)=>{\n        const cb=()=>{\n            config.headers.Authorization = `Bearer ${Secured.getToken()}`;\n            return Promise.resolve(config);\n        }\n        return Secured.updateToken(cb);\n    })\n}\n\nconst getAxiosClient =()=> http;\n\nconst HttpService ={\n    HttpMethods,\n    configure,\n    getAxiosClient\n}\n"]},"metadata":{},"sourceType":"module"}