{"version":3,"sources":["components/welcome.js","components/secure.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","className","Component","Secured","props","state","keycloak","authenticated","Keycloak","init","onLoad","checkLoginIframe","success","realmAccess","roles","indexOf","setState","logout","login","axios","interceptors","request","use","config","headers","Object","assign","Accept","Authorization","token","response","error","status","redirectUri","console","log","this","App","to","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAWeA,E,4JARb,WACE,OACE,qBAAKC,UAAU,UAAf,SACE,4E,GAJcC,a,kCC6DPC,E,kDAxDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,SAAU,KAAMC,eAAe,GAF7B,E,qDAKnB,WAAqB,IAAD,OACZD,EAAWE,IAAS,mBAC1BF,EAASG,KAAK,CAAEC,OAAQ,YAAaC,kBAAkB,IAASC,SAAQ,SAAAL,GAClEA,GACwD,IAAtDD,EAASO,YAAYC,MAAMC,QAAQ,cAErC,EAAKC,SAAS,CAAEV,SAAUA,EAAUC,cAAeA,IAEnDD,EAASW,SAGXX,EAASY,WAGbC,IAAMC,aAAaC,QAAQC,KAAI,SAAAC,GAM7B,OALAA,EAAOC,QAAUC,OAAOC,OAAO,GAAIH,EAAOC,QAAS,CACjD,eAAgB,mBAChBG,OAAQ,mBACRC,cAAe,UAAYtB,EAASuB,QAE/BN,KAGTJ,IAAMC,aAAaU,SAASR,KAAI,SAACQ,GAE/B,OAAOA,KACN,SAACC,GAMF,OAJ8B,MAA1BA,EAAMD,SAASE,SACjB1B,EAAS2B,YAAc,wBACvB3B,EAASW,UAEJc,O,oBAIX,WAEE,OADAG,QAAQC,IAAIC,KAAK/B,MAAMC,SAAU8B,KAAK/B,MAAME,eACxC6B,KAAK/B,MAAMC,SACT8B,KAAK/B,MAAME,cACb,8BACE,yKAGY,0DAGhB,+D,GAtDgBL,aCsEPmC,G,kKAjBb,WACE,OACE,cAAC,IAAD,UACE,sBAAKpC,UAAU,YAAf,UACE,+BACE,6BAAI,cAAC,IAAD,CAAMqC,GAAG,IAAT,gCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,oCAEN,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,kB,GAZxBvC,cC5CHwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAQ1Bb,M","file":"static/js/main.d16580f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className=\"Welcome\">\n        <p>This is your public-facing component.</p>\n      </div>\n    );\n  }\n}\nexport default Welcome;","\nimport React, { Component } from 'react';\nimport Keycloak from 'keycloak-js';\nimport axios from \"axios\";\n\nclass Secured extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { keycloak: null, authenticated: false };\n  }\n\n  componentDidMount() {\n    const keycloak = Keycloak('./keycloak.json');\n    keycloak.init({ onLoad: \"check-sso\", checkLoginIframe: false }).success(authenticated => {\n      if (authenticated) {\n        if (keycloak.realmAccess.roles.indexOf('ROLE_ADMIN') !== -1) {\n          // store.dispatch(updateUserInfo(kc.tokenParsed, kc));    \n          this.setState({ keycloak: keycloak, authenticated: authenticated })\n        } else {\n          keycloak.logout();\n        }\n      } else {\n        keycloak.login();\n      }\n    });\n    axios.interceptors.request.use(config => {\n      config.headers = Object.assign({}, config.headers, {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + keycloak.token\n      });\n      return config;\n    });\n\n    axios.interceptors.response.use((response) => {\n      // Do something with response data\n      return response;\n    }, (error) => {\n      // Do something with response error\n      if (error.response.status === 401) {\n        keycloak.redirectUri = 'http://localhost:3000';\n        keycloak.logout();\n      }\n      return error;\n    });\n  }\n\n  render() {\n    console.log(this.state.keycloak, this.state.authenticated)\n    if (this.state.keycloak) {\n      if (this.state.authenticated) return (\n        <div>\n          <p>This is a Keycloak-secured component of your application. You shouldn't be able\n            to see this unless you've authenticated with Keycloak.</p>\n        </div>\n      ); else return (<div>Unable to authenticate!</div>)\n    }\n    return (\n      <div>Initializing Keycloak...</div>\n    );\n  }\n}\nexport default Secured;","// import './App.css';\n// import NewBookForm from './components/bookForm';\n// import BookList from './components/bookList';\n// import ClickCounter from './components/clickCounter';\n// import HoverCounter from './components/hoverCounter';\n// import SearchFilter from './components/searchFilter';\n// // import SongList from './components/songList';\n// import BooksProvider from './context/bookContext';\n\n// function App() {\n//   return (\n//     <div className=\"App\" style={{textAlign:'center'}}>\n//       <BooksProvider>\n//         <BookList/>\n//         <NewBookForm/>\n//       </BooksProvider>\n//       <SearchFilter />\n//       <ClickCounter/>\n\n//       <HoverCounter />\n//     </div>\n//   );\n// }\n\n// export default App;\n// import './App.css';\n// import NewBookForm from './components/bookForm';\n// import BookList from './components/bookList';\n// import ClickCounter from './components/clickCounter';\n// import HoverCounter from './components/hoverCounter';\n// import SearchFilter from './components/searchFilter';\n// // import SongList from './components/songList';\n// import BooksProvider from './context/bookContext';\n\n// function App() {\n//   return (\n//     <div className=\"App\" style={{textAlign:'center'}}>\n//       <BooksProvider>\n//         <BookList/>\n//         <NewBookForm/>\n//       </BooksProvider>\n//       <SearchFilter />\n//       <ClickCounter/>\n\n//       <HoverCounter />\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { Component } from 'react';\nimport { BrowserRouter,Routes, Route, Link } from 'react-router-dom';\nimport Welcome from './components/welcome';\nimport Secured from './components/secure';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <ul>\n            <li><Link to=\"/\">public component</Link></li>\n            <li><Link to=\"/secured\">secured component</Link></li>\n          </ul>\n          <Routes>\n          <Route exact path=\"/\" element={<Welcome/>} />\n          <Route path=\"/secured\" element={<Secured/>} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import HttpService from './services/httpService';\n// import Secure from './services/secured';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// Secure.initKeycloak(renderApp);\n// HttpService.configure();\nreportWebVitals();\n"],"sourceRoot":""}